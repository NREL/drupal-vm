---
# `vagrant_box` can also be set to geerlingguy/centos6, geerlingguy/centos7,
# geerlingguy/debian8, geerlingguy/ubuntu1404, geerlingguy/ubuntu1204, etc.
vagrant_box: geerlingguy/drupal-vm
vagrant_user: vagrant
vagrant_synced_folder_default_type: nfs
vagrant_gui: false

# If you need to run multiple instances of Drupal VM, set a unique hostname,
# machine name, and IP address for each instance.
vagrant_hostname: data.test
vagrant_machine_name: drupalvm
vagrant_ip: 192.168.88.88

# Allow Drupal VM to be accessed via a public network interface on your host.
# Vagrant boxes are insecure by default, so be careful. You've been warned!
# See: https://docs.vagrantup.com/v2/networking/public_network.html
vagrant_public_ip: ""

# A list of synced folders, with the keys 'local_path', 'destination', and
# a 'type' of [nfs|rsync|smb] (leave empty for slow native shares). See
# http://docs.drupalvm.com/en/latest/getting-started/syncing-folders/ for more.
vagrant_synced_folders:
  # The first synced folder will be used for the default Drupal installation, if
  # any of the build_* settings are 'true'. By default the folder is set to
  # the drupal-vm folder.
  - local_path: ~/html
    destination: /var/www/sites
    type: nfs
    create: true

# Memory and CPU to use for this VM.
vagrant_memory: 8192
vagrant_cpus: 8

# Ensure vagrant plugins are installed.
vagrant_plugins:
  - name: vagrant-vbguest
  - name: vagrant-hostsupdater

# Minimum required versions.
drupalvm_vagrant_version_min: '1.8.6'
drupalvm_ansible_version_min: '2.4'

# Force use of ansible_local provisioner, even if Ansible is installed on host.
force_ansible_local: false

# The web server software to use. Can be either 'apache' or 'nginx'.
drupalvm_webserver: nginx

# The database system to use. Can be either 'mysql' or 'pgsql'.
drupal_db_backend: mysql

# Set this to 'false' if you are using a different site deployment strategy and
# would like to configure 'vagrant_synced_folders' and 'apache_vhosts' manually.
drupal_build_makefile: false
drush_makefile_path: "{{ config_dir }}/drupal.make.yml"
drush_make_options: "--no-gitinfofile"

# Set 'build_makefile' to 'false' and this to 'true' if you are using a
# composer based site deployment strategy.
drupal_build_composer: false
drupal_composer_path: "{{ config_dir }}/drupal.composer.json"
drupal_composer_install_dir: "/var/www/drupalvm/drupal"
drupal_composer_dependencies:
  - "drupal/devel:^1.2"

# Set this to 'true' and 'build_makefile', 'build_composer' to 'false' if you
# are using Composer's create-project as a site deployment strategy.
drupal_build_composer_project: false
drupal_composer_project_package: "drupal-composer/drupal-project:8.x-dev"
drupal_composer_project_options: "--prefer-dist --stability dev --no-interaction"

# Set this to 'false' if you don't need to install drupal (using the drupal_*
# settings below), but instead copy down a database (e.g. using drush sql-sync).
drupal_install_site: false

# Required Drupal settings.
sites_path: "/var/www/sites"
drupal_core_path: "{{ sites_path }}"
drupal_core_owner: "{{ drupalvm_user }}"
drupal_db_user: drupal
drupal_db_password: drupal
drupal_db_name: drupal
drupal_db_host: localhost

# Settings for installing a Drupal site if 'install_site:' is 'true'.
drupal_major_version: 8
drupal_domain: "{{ vagrant_hostname }}"
drupal_site_name: "Drupal"
drupal_install_profile: standard
drupal_enable_modules: [ 'devel' ]
drupal_account_name: admin
drupal_account_pass: admin

# Additional arguments or options to pass to `drush site-install`.
drupal_site_install_extra_args: []

# Cron jobs are added to the vagrant user's crontab. Keys include name
# (required), minute, hour, day, weekday, month, job (required), and state.
drupalvm_cron_jobs: []

# Drupal VM automatically creates a drush alias file in your ~/.drush folder if
# this variable is 'true'.
configure_drush_aliases: true
drush_aliases_host_template: "templates/drupalvm.aliases.drushrc.php.j2"
drush_aliases_host_template_yml: "templates/drupalvm.aliases.yml.j2"
drush_aliases_guest_template: "templates/drupalvm-local.aliases.drushrc.php.j2"
drush_aliases_guest_template_yml: "templates/drupalvm-local.aliases.yml.j2"

# Helper variable to configure the PHP-FPM connection for each Apache
# VirtualHost in the `apache_vhosts` list.
# apache_vhost_php_fpm_parameters: |
#     <FilesMatch \.php$>
#       SetHandler "proxy:fcgi://{{ php_fpm_listen }}"
#     </FilesMatch>

# Nginx hosts. Each site will get a server entry using the configuration defined
# here. Set the 'is_php' property for document roots that contain PHP apps like
# Drupal.
nginx_hosts:
  - server_name: "{{ drupal_domain }} www.{{ drupal_domain }}"
    root: "{{ drupal_core_path }}"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

    # recsel -e "Version = 'd7' || Version = 'd8' && Ato = 1" -P Name ~/Documents/nrelsites.rec
  - server_name: "bifipv.test www.bifipv.test"
    root: "{{ sites_path }}/bifipv/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "buildingdata.test www.buildingdata.test"
    root: "{{ sites_path }}/buildingdata/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "buildingsfieldtest.test www.buildingsfieldtest.test"
    root: "{{ sites_path }}/buildingsfieldtest/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "cbrd.test www.cbrd.test"
    root: "{{ sites_path }}/cbrd/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "communications_resources.test www.communications_resources.test"
    root: "{{ sites_path }}/communications_resources/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "ec-leds.test www.ec-leds.test"
    root: "{{ sites_path }}/ec-leds/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "enter.test www.enter.test"
    root: "{{ sites_path }}/enter/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "nice-future.test www.nice-future.test"
    root: "{{ sites_path }}/nice-future/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;
      fastcgi_buffers 16 16k;
      fastcgi_buffer_size 32k;

  - server_name: "nsrdb.test www.nsrdb.test"
    root: "{{ sites_path }}/nsrdb/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "nwtc.test www.nwtc.test"
    root: "{{ sites_path }}/nwtc/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "pvdpc.test www.pvdpc.test"
    root: "{{ sites_path }}/pvdpc"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "pvdpc-firstdata.test www.pvdpc-firstdata.test"
    root: "{{ sites_path }}/pvdpc-firstdata/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "efficiency-charts.test www.efficiency-charts.test"
    root: "{{ sites_path }}/efficiency-charts"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "sam.test www.sam.test"
    root: "{{ sites_path }}/sam/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "wild.test www.wild.test"
    root: "{{ sites_path }}/wild/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "d8-demo07.test www.d8-demo07.test"
    root: "{{ sites_path }}/d8-demo07/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "decoupled.test www.decoupled.test"
    root: "{{ sites_path }}/decoupled/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "lightning-project.test www.lightning-project.test"
    root: "{{ sites_path }}/lightning-project/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "digitalassetmanagement.test www.digitalassetmanagement.test"
    root: "{{ sites_path }}/digitalassetmanagement/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "eom.test www.eom.test"
    root: "{{ sites_path }}/eom/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "df-project.test www.df-project.test"
    root: "{{ sites_path }}/df-project/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "communications-project.test www.communications-project.test"
    root: "{{ sites_path }}/communications-project/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "data.test www.data.test"
    root: "{{ sites_path }}/data/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "data-legacy.test www.data-legacy.test"
    root: "{{ sites_path }}/data-legacy/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "data-catalog.test www.data-catalog.test"
    root: "{{ sites_path }}/data-catalog/docroot"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;


  - server_name: "inside-co.test www.inside-co.test"
    root: "{{ sites_path }}/inside-co/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "library.test www.library.test"
    root: "{{ sites_path }}/library/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "nrelnow.test www.nrelnow.test"
    root: "{{ sites_path }}/nrelnow/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "decision-tree-d7.test www.decision-tree-d7.test"
    root: "{{ sites_path }}/decision-tree-d7/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "decision-tree-d8.test www.decision-tree-d8.test"
    root: "{{ sites_path }}/decision-tree-d8/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "ppf.test www.ppf.test"
    root: "{{ sites_path }}/ppf/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "pvgrowth.test www.pvgrowth.test"
    root: "{{ sites_path }}/pvgrowth/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "pvrw.test www.pvrw.test"
    root: "{{ sites_path }}/pvrw/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "small-business.test www.small-business.test"
    root: "{{ sites_path }}/small-business/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;
      fastcgi_buffers 16 16k;
      fastcgi_buffer_size 32k;

  - server_name: "solarpaces.test www.solarpaces.test"
    root: "{{ sites_path }}/solarpaces/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;
      fastcgi_buffers 16 16k;
      fastcgi_buffer_size 32k;

  - server_name: "comment.test www.comment.test"
    root: "{{ sites_path }}/comment"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "packagist.test www.packagist.test"
    root: "{{ sites_path }}/packagist/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "bedrock.test www.bedrock.test"
    root: "{{ sites_path }}/bedrock/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;


  - server_name: "zeroenergy.test www.zeroenergy.test"
    root: "{{ sites_path }}/zeroenergy/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "zeroenergy-pantheon.test www.zeroenergy-pantheon.test"
    root: "{{ sites_path }}/zeroenergy-pantheon/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  # Action.network
  - server_name: "eere-project.test www.eere-project.test"
    root: "{{ sites_path }}/eere-project"
    is_php: true
    extra_parameters: |
      location /femp/assistance {
        alias /var/www/sites/eere-project/femp/assistance_project/web;

        # Don't touch PHP for static content.
        try_files $uri $uri/ @assistance;

        # Don't allow direct access to PHP files in the vendor directory.
        location ~ /.+\/vendor/.*\.php$ {
            deny all;
            return 404;
        }
        # Allow "Well-Known URIs" as per RFC 5785
        location ~* ^/.well-known/ {
            allow all;
        }
        location ~ (^|/)\. {
            return 403;
        }

        # Redirect common PHP files to their new locations.
        location ~ ^((?!.*(?:core)).*)/(install.php|rebuild.php) {
            return 301 $scheme://$host$1/core/$2$is_args$args;
        }

        # Use fastcgi for all php files.
        location ~ \.php$|^/update.php {
            fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_intercept_errors on;
            fastcgi_read_timeout 600;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
        }

        location ~ ^/femp/assistance/sites/.*/files/styles/ {
            try_files $uri @rewrite;
        }
        location ~ ^/femp/assistance/(/[a-z\-]+)?/system/files/ {
            try_files $uri /index.php?$query_string;
        }

        location ~ ^/femp/[a-z\-]+/favicon.ico {
            log_not_found off;
            access_log off;
        }

        location ~ ^/femp/[a-z\-]+/robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            log_not_found off;
        }
      }

      location @assistance {
          rewrite /femp/assistance/(.*)$ /femp/assistance/index.php?/$1 last;
      }
      location /femp/training {
        alias /var/www/sites/eere-project/femp/training_project/web;

        # Don't touch PHP for static content.
        try_files $uri $uri/ @training;

        # Don't allow direct access to PHP files in the vendor directory.
        location ~ /.+\/vendor/.*\.php$ {
            deny all;
            return 404;
        }
        # Allow "Well-Known URIs" as per RFC 5785
        location ~* ^/.well-known/ {
            allow all;
        }
        location ~ (^|/)\. {
            return 403;
        }

        # Redirect common PHP files to their new locations.
        location ~ ^((?!.*(?:core)).*)/(install.php|rebuild.php) {
            return 301 $scheme://$host$1/core/$2$is_args$args;
        }

        # Use fastcgi for all php files.
        location ~ \.php$|^/update.php {
            fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_intercept_errors on;
            fastcgi_read_timeout 600;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
        }

        location ~ ^/femp/training/sites/.*/files/styles/ {
            try_files $uri @rewrite;
        }
        location ~ ^/femp/training/(/[a-z\-]+)?/system/files/ {
            try_files $uri /index.php?$query_string;
        }

        location ~ ^/femp/[a-z\-]+/favicon.ico {
            log_not_found off;
            access_log off;
        }

        location ~ ^/femp/[a-z\-]+/robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            log_not_found off;
        }
      }

      location @training {
          rewrite /femp/training/(.*)$ /femp/training/index.php?/$1 last;
      }
      location /wind/resource_center {
        alias /var/www/sites/eere-project/wind/resource_center/web;

        # Don't touch PHP for static content.
        try_files $uri $uri/ @resource_center;

        # Don't allow direct access to PHP files in the vendor directory.
        location ~ /.+\/vendor/.*\.php$ {
            deny all;
            return 404;
        }
        # Allow "Well-Known URIs" as per RFC 5785
        location ~* ^/.well-known/ {
            allow all;
        }
        location ~ (^|/)\. {
            return 403;
        }

        # Redirect common PHP files to their new locations.
        location ~ ^((?!.*(?:core)).*)/(install.php|rebuild.php) {
            return 301 $scheme://$host$1/core/$2$is_args$args;
        }

        # Use fastcgi for all php files.
        location ~ \.php$|^/update.php {
            fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_intercept_errors on;
            fastcgi_read_timeout 600;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
        }

        location ~ ^/femp/resource_center/sites/.*/files/styles/ {
            try_files $uri @rewrite;
        }
        location ~ ^/femp/resource_center/(/[a-z\-]+)?/system/files/ {
            try_files $uri /index.php?$query_string;
        }

        location ~ ^/femp/[a-z\-]+/favicon.ico {
            log_not_found off;
            access_log off;
        }

        location ~ ^/femp/[a-z\-]+/robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            log_not_found off;
        }
      }
      location @resource_center {
        rewrite /wind/resource_center/(.*)$ /wind/resource_center/index.php?/$1 last;
      }
      location /femp/requirements {
        alias /var/www/sites/eere-project/femp/requirements_project/web;

        # Don't touch PHP for static content.
        try_files $uri $uri/ @requirements;

        # Don't allow direct access to PHP files in the vendor directory.
        location ~ /.+\/vendor/.*\.php$ {
            deny all;
            return 404;
        }
        # Allow "Well-Known URIs" as per RFC 5785
        location ~* ^/.well-known/ {
            allow all;
        }
        location ~ (^|/)\. {
            return 403;
        }

        # Redirect common PHP files to their new locations.
        location ~ ^((?!.*(?:core)).*)/(install.php|rebuild.php) {
            return 301 $scheme://$host$1/core/$2$is_args$args;
        }

        # Use fastcgi for all php files.
        location ~ \.php$|^/update.php {
            fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_intercept_errors on;
            fastcgi_read_timeout 600;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
        }

        location ~ ^/femp/requirements/sites/.*/files/styles/ {
            try_files $uri @rewrite;
        }
        location ~ ^/femp/requirements/(/[a-z\-]+)?/system/files/ {
            try_files $uri /index.php?$query_string;
        }

        location ~ ^/femp/[a-z\-]+/favicon.ico {
            log_not_found off;
            access_log off;
        }

        location ~ ^/femp/[a-z\-]+/robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            log_not_found off;
        }
      }
      location @requirements {
          rewrite /femp/requirements/(.*)$ /femp/requirements/index.php?/$1 last;
      }
      location /seeaction {
          alias /var/www/sites/eere-project/seeaction/web;
  
          # Don't touch PHP for static content.
          try_files $uri $uri/ @seeaction;
  
          # Don't allow direct access to PHP files in the vendor directory.
          location ~ /.+\/vendor/.*\.php$ {
              deny all;
              return 404;
          }
          # Allow "Well-Known URIs" as per RFC 5785
          location ~* ^/.well-known/ {
              allow all;
          }
          location ~ (^|/)\. {
              return 403;
          }
  
          # Redirect common PHP files to their new locations.
          location ~ ^((?!.*(?:core)).*)/(install.php|rebuild.php) {
              return 301 $scheme://$host$1/core/$2$is_args$args;
          }
  
          # Use fastcgi for all php files.
          location ~ \.php$|^/update.php {
              fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $request_filename;
              fastcgi_intercept_errors on;
              fastcgi_read_timeout 600;
              include fastcgi_params;
              fastcgi_pass 127.0.0.1:9000;
          }
  
          location ~ ^/seeaction/sites/.*/files/styles/ {
              try_files $uri @rewrite;
          }
          location ~ ^/seeaction/(/[a-z\-]+)?/system/files/ {
              try_files $uri /index.php?$query_string;
          }
  
          location ~ ^/[a-z\-]+/favicon.ico {
              log_not_found off;
              access_log off;
          }
  
          location ~ ^/[a-z\-]+/robots.txt {
              allow all;
              log_not_found off;
              access_log off;
          }
  
          location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
              expires max;
              log_not_found off;
          }
      }
      location @seeaction {
        rewrite /seeaction/(.*)$ /seeaction/index.php?/$1 last;
      }
      location /resilience {
          alias /var/www/sites/eere-project/resilience_project/web;
  
          # Don't touch PHP for static content.
          try_files $uri $uri/ @resilience;
  
          # Don't allow direct access to PHP files in the vendor directory.
          location ~ /.+\/vendor/.*\.php$ {
              deny all;
              return 404;
          }
          # Allow "Well-Known URIs" as per RFC 5785
          location ~* ^/.well-known/ {
              allow all;
          }
          location ~ (^|/)\. {
              return 403;
          }
  
          # Redirect common PHP files to their new locations.
          location ~ ^((?!.*(?:core)).*)/(install.php|rebuild.php) {
              return 301 $scheme://$host$1/core/$2$is_args$args;
          }
  
          # Use fastcgi for all php files.
          location ~ \.php$|^/update.php {
              fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $request_filename;
              fastcgi_intercept_errors on;
              fastcgi_read_timeout 600;
              include fastcgi_params;
              fastcgi_pass 127.0.0.1:9000;
          }
  
          location ~ ^/resilience/sites/.*/files/styles/ {
              try_files $uri @rewrite;
          }
          location ~ ^/resilience/(/[a-z\-]+)?/system/files/ {
              try_files $uri /index.php?$query_string;
          }
  
          location ~ ^/[a-z\-]+/favicon.ico {
              log_not_found off;
              access_log off;
          }
  
          location ~ ^/[a-z\-]+/robots.txt {
              allow all;
              log_not_found off;
              access_log off;
          }
  
          location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
              expires max;
              log_not_found off;
          }
      }
      location @resilience {
          rewrite /resilience/(.*)$ /resilience/index.php?/$1 last;
      }
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  # Action.net EERE ECHWE
  # Action.network
  - server_name: "energyicorps.test www.energyicorps.test"
    root: "{{ sites_path }}/energyicorps/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  # AWS
  - server_name: "sws.test www.sws.test"
    root: "{{ sites_path }}/sws/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "sws2.test www.sws2.test"
    root: "{{ sites_path }}/sws2/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "sws-project.test www.sws-project.test"
    root: "{{ sites_path }}/sws-project/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "beopt.test www.beopt.test"
    root: "{{ sites_path }}/beopt/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "cleanenergysolutions.test www.cleanenergysolutions.test"
    root: "{{ sites_path }}/cleanenergysolutions/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  # Pantheon

  - server_name: "h2awsm.test www.h2awsm.test"
    root: "{{ sites_path }}/h2awsm/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "h2awsm-project.test www.h2awsm-project.test"
    root: "{{ sites_path }}/h2awsm-project/web"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "adminer.{{ vagrant_hostname }}"
    root: "{{ adminer_install_dir }}"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "xhprof.{{ vagrant_hostname }}"
    root: "{{ php_xhprof_html_dir }}"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "pimpmylog.{{ vagrant_hostname }}"
    root: "{{ pimpmylog_install_dir }}"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

  - server_name: "{{ vagrant_ip }} dashboard.{{ vagrant_hostname }}"
    root: "{{ dashboard_install_dir }}"
    is_php: true
    extra_parameters: |
      listen 443 ssl;
      ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
      ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

nginx_remove_default_vhost: true
nginx_ppa_use: true
nginx_vhost_template: "templates/nginx-vhost.conf.j2"

# MySQL databases and users.
mysql_databases:
  - name: "{{ drupal_db_name }}"
    encoding: utf8mb4
    collation: utf8mb4_general_ci

mysql_users:
  - name: "{{ drupal_db_user }}"
    host: "%"
    password: "{{ drupal_db_password }}"
    priv: "{{ drupal_db_name }}.*:ALL"

# PostgreSQL databases and users.
postgresql_databases:
  - name: "{{ drupal_db_name }}"

postgresql_users:
  - name: "{{ drupal_db_user }}"
    password: "{{ drupal_db_password }}"
    db: "{{ drupal_db_name }}"
    priv: "ALL"

# Comment out any extra utilities you don't want to install. If you don't want
# to install *any* extras, set this value to an empty set, e.g. `[]`.
installed_extras:
  - adminer
  # - blackfire
  # - drupalconsole
  - drush
  - elasticsearch
  # - java
  - mailhog
  - memcached
  # - newrelic
  - net-tools
  # - nodejs
  - pimpmylog
  # - redis
  # - ruby
  # - selenium
  # - solr
  # - tideways
  # - upload-progress
  # - varnish
  - xdebug
  # - xhprof

# Add any extra apt or yum packages you would like installed.
extra_packages:
  - sqlite
  - imagemagick
  - php-gmagick
  - webalizer
  - python-pip
  - cabextract
  - traceroute
  - awscli
  - xvfb
  - libfontconfig
  - wkhtmltopdf
  - php{{ php_version }}-zip
  - php{{ php_version }}-gmp
  # - libcurl3
  # - openssl
  # - php-mongodb
  # - mongodb-org-server
  # - libcurl4
  # - mongodb-org-tools
  # - ImageMagick-devel
  # - GraphicsMagick-devel
  # - GraphicsMagick
  # - php71-php-pecl-gmagick
  # - libpng
  # - libpng12
  # - bind-utils
  # - openssl-devel
  # - ffmpeg
  # - perl-Image-ExifTool
  # - net-tools
# You can configure almost anything else on the server in the rest of this file.
extra_security_enabled: false

# drush_version: "8.1.14"

firewall_enabled: false
firewall_allowed_tcp_ports:
  - "22"
  - "25"
  - "80"
  - "81"
  - "443"
  - "4444"
  - "8025"
  - "8080"
  - "8443"
  - "8983"
  - "9200"
firewall_log_dropped_packets: false
firewall_disable_firewalld: true
firewall_disable_ufw: true

# PHP Configuration. Currently-supported versions: 5.6, 7.0, 7.1.
# See version-specific notes: http://docs.drupalvm.com/en/latest/configurations/php/
php_version: "7.3"
php_install_recommends: no
# php_memory_limit: "2048M"
php_memory_limit: "4096M"
php_display_errors: "On"
php_display_startup_errors: "On"
php_realpath_cache_size: "1024K"
php_sendmail_path: "/opt/mailhog/mhsendmail"
php_opcache_enabled_in_ini: true
php_opcache_memory_consumption: "192"
php_opcache_max_accelerated_files: 4096
php_max_input_vars: "4000"
php_output_buffering: "Off"

php_packages_extra:
  - php-pear
  - "php{{ php_version }}-curl"
# - php72-php-pecl-mongodb.x86_64
  # - php72-php-pecl-imagick
  # - ImageMagick
  # - "php{{ php_version }}-bz2"
  # - "php{{ php_version }}-imagick"
  # - imagemagick

# Put in place for SWS.
php_max_execution_time: "600"
php_max_input_time: "300"

# Drupal VM defaults to using PHP-FPM with either Apache or Nginx. If you wish
# to instead use Apache + mod_php with an Ubuntu base box, make sure you add
# libapache2-mod-php7.0 to `extra_packages` elsewhere in this config file.
php_enable_php_fpm: true
php_fpm_listen: "127.0.0.1:9000"

composer_path: /usr/bin/composer
composer_home_path: "/home/{{ drupalvm_user }}/.composer"
composer_home_owner: "{{ drupalvm_user }}"
composer_home_group: "{{ drupalvm_user }}"
composer_global_packages:
  - { name: hirak/prestissimo, release: '^0.3' }

# Run specified scripts before or after VM is provisioned. Path is relative to
# the `provisioning/playbook.yml` file.
pre_provision_scripts:
 - "../scripts/pre-provision.sh"
# post_provision_scripts:
#   - "../examples/scripts/configure-solr.sh"

# MySQL Configuration.
mysql_root_password: root
mysql_supports_innodb_large_prefix: true
mysql_slow_query_log_enabled: true
mysql_slow_query_time: 2
mysql_wait_timeout: 28800
adminer_install_filename: index.php

# Node.js configuration (if enabled above).
# Valid examples: "0.10", "0.12", "4.x", "5.x", "6.x".
nodejs_version: "10.x"
nodejs_npm_global_packages: []
nodejs_install_npm_user: "{{ drupalvm_user }}"
npm_config_prefix: "/home/{{ drupalvm_user }}/.npm-global"

# Ruby Configuration (if enabled above).
ruby_install_gems_user: "{{ drupalvm_user }}"
ruby_install_gems: []

# Varnish Configuration (if enabled above).
varnish_listen_port: "81"
varnish_default_vcl_template_path: templates/drupalvm.vcl.j2
varnish_default_backend_host: "127.0.0.1"
varnish_default_backend_port: "80"

# Pimp my Log settings.
pimpmylog_install_dir: /usr/share/php/pimpmylog
pimpmylog_grant_all_privs: true

# XDebug configuration. XDebug is disabled by default for better performance.
# XDebug configuration. XDebug is disabled by default for better performance.
# php_xdebug_default_enable: 0
# php_xdebug_coverage_enable: 0
#php_xdebug_cli_disable: yes
# php_xdebug_remote_enable: 1
# php_xdebug_remote_connect_back: 1
# php_xdebug_idekey: PHPSTORM
# php_xdebug_max_nesting_level: 256
# php_xdebug_remote_host: "{{ ansible_default_ipv4.gateway }}"

php_xdebug_default_enable: 1
php_xdebug_coverage_enable: 0
php_xdebug_cli_disable: yes
php_xdebug_remote_enable: 1
php_xdebug_remote_connect_back: 1
php_xdebug_idekey: PHPSTORM
php_xdebug_max_nesting_level: 256
php_xdebug_remote_host: "{{ ansible_default_ipv4.gateway }}"

php_upload_max_filesize: "2048M"
php_post_max_size: "2048M"
client_max_body_size: "2048M"

# Solr Configuration (if enabled above).
# solr_version: "5.5.5"
# solr_xms: "64M"
# solr_xmx: "256M"
# solr_cores:
#   - cleanenergysolutions.sandbox
#   - cleanenergysolutions.stage
#   - cleanenergysolutions.prod
# java_packages:
#   - java-1.8.0-openjdk

# Elasticsearch Configuration (if enabled above).
elasticsearch_network_host: localhost
elasticsearch_http_port: 9200

# Whether to allow inline scripting against ElasticSearch.
# elasticsearch_script_inline: true
# elasticsearch_script_indexed: true

# Selenium configuration.
selenium_version: 2.53.0

# Docker configuration.
docker_container_name: drupal-vm
docker_image_name: drupal-vm
docker_image_path: ~/Downloads

# Other configuration.
dashboard_install_dir: /var/www/dashboard
known_hosts_path: ~/.ssh/known_hosts
hostname_configure: true
hostname_fqdn: "{{ vagrant_hostname }}"
ssh_home: "{{ drupal_core_path }}"
# Add extensions to this list to have them installed with this role.
php_pecl_extensions: [jsmin]
# - xdebug
